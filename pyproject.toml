[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "factor-forecasting"
version = "2.0.0"
description = "Professional quantitative finance system for stock return prediction"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Factor Forecasting Team", email = "team@factorforecasting.com"}
]
maintainers = [
    {name = "Factor Forecasting Team", email = "team@factorforecasting.com"}
]
keywords = [
    "quantitative finance",
    "stock prediction", 
    "deep learning",
    "time series",
    "risk management",
    "portfolio optimization"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence", 
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent"
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.9.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "pyyaml>=5.4.0",
    "tqdm>=4.62.0",
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
    "pyarrow>=5.0.0",
    "fastparquet>=0.7.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    "scipy>=1.7.0",
    "joblib>=1.0.0",
    "psutil>=5.8.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0", 
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "pre-commit>=2.0",
    "pytest-xdist>=2.0",
    "pytest-mock>=3.0"
]
gpu = [
    "torch>=1.9.0",
    "torchvision>=0.10.0"
]
api = [
    "fastapi[all]>=0.68.0",
    "gunicorn>=20.1.0",
    "redis>=3.5.0",
    "celery>=5.0.0"
]
monitoring = [
    "prometheus-client>=0.11.0",
    "grafana-api>=1.0.0",
    "structlog>=21.0.0"
]

[project.urls]
Homepage = "https://github.com/factor-forecasting/factor-forecasting"
Repository = "https://github.com/factor-forecasting/factor-forecasting"
Documentation = "https://factor-forecasting.readthedocs.io/"
"Bug Tracker" = "https://github.com/factor-forecasting/factor-forecasting/issues"
Changelog = "https://github.com/factor-forecasting/factor-forecasting/blob/main/CHANGELOG.md"

[project.scripts]
factor-train = "src.training.train:main"
factor-api = "src.api.api_server:main" 
factor-eval = "src.evaluation.evaluate:main"

[tool.setuptools]
package-dir = {"" = "src"}
packages = {find = {where = ["src"], include = ["*"]}}
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.txt"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers --disable-warnings"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*", 
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "venv",
    ".venv",
    "build",
    "dist",
    "*.egg-info"
]